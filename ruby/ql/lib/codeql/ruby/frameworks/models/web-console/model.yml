"extensions":
- "addsTo":
    "extensible": "typeModel"
    "pack": "codeql/ruby-all"
  "data":
  - - "WebConsole::ExceptionMapper"
    - "WebConsole::ExceptionMapper!"
    - "Method[find_binding].ReturnValue"
  - - "WebConsole::Evaluator"
    - "WebConsole::Session"
    - "Method[switch_binding_to].ReturnValue"
  - - "WebConsole::Request"
    - "WebConsole::Middleware"
    - "Method[create_regular_or_whiny_request].ReturnValue"
  - - "WebConsole::Request"
    - "WebConsole::Interceptor!"
    - "Method[call].Parameter[0]"
  - - "WebConsole::WhinyRequest"
    - "WebConsole::Middleware"
    - "Method[create_regular_or_whiny_request].ReturnValue"
- "addsTo":
    "extensible": "sinkModel"
    "pack": "codeql/ruby-all"
  "data":
  - - "WebConsole::Testing::ERBPrecompiler"
    - "Method[method_missing].Parameter[0]"
    - "code-injection"
  - - "WebConsole::Testing::ERBPrecompiler!"
    - "Method[new].Parameter[0]"
    - "path-injection"
- "addsTo":
    "extensible": "summaryModel"
    "pack": "codeql/ruby-all"
  "data":
  - - "WebConsole::ExceptionMapper!"
    - "Method[new]"
    - "Argument[0]"
    - "ReturnValue"
    - "value"
  - - "WebConsole::ExceptionMapper!"
    - "Method[find_binding]"
    - "Argument[0]"
    - "ReturnValue"
    - "taint"
  - - "WebConsole::Evaluator"
    - "Method[format_exception]"
    - "Argument[0]"
    - "ReturnValue"
    - "taint"
  - - "WebConsole::WhinyRequest"
    - "Method[whine_unless]"
    - "Argument[0]"
    - "ReturnValue"
    - "value"
  - - "WebConsole::Permissions"
    - "Method[coerce_network_to_ipaddr]"
    - "Argument[0]"
    - "ReturnValue"
    - "value"
  - - "WebConsole::Injector!"
    - "Method[new]"
    - "Argument[1]"
    - "ReturnValue"
    - "value"
  - - "WebConsole::Context!"
    - "Method[new]"
    - "Argument[0]"
    - "ReturnValue"
    - "value"
  - - "WebConsole::Middleware!"
    - "Method[new]"
    - "Argument[0]"
    - "ReturnValue"
    - "value"
  - - "WebConsole::Evaluator!"
    - "Method[new]"
    - "Argument[0]"
    - "ReturnValue"
    - "value"
  - - "WebConsole::Request::GetSecureIp!"
    - "Method[new]"
    - "Argument[1]"
    - "ReturnValue"
    - "value"
  - - "WebConsole::SourceLocation!"
    - "Method[new]"
    - "Argument[0]"
    - "ReturnValue"
    - "value"
  - - "WebConsole::Testing::FakeMiddleware!"
    - "Method[new]"
    - "Argument[0]"
    - "ReturnValue"
    - "taint"
