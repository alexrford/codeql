"extensions":
- "addsTo":
    "extensible": "typeModel"
    "pack": "codeql/ruby-all"
  "data":
  - - "PG::Connection"
    - "PG::Connection"
    - "Method[transaction].Argument[block].Parameter[0]"
  - - "PG::Connection"
    - "PG::TestingHelpers"
    - "Method[run_with_scheduler].Argument[block].Parameter[0]"
  - - "PG::Connection"
    - "PG::TestingHelpers"
    - "Method[run_with_gate].Argument[block].Parameter[0]"
  - - "PG::Connection"
    - "PG::TestingHelpers::PostgresServer"
    - "Method[connect].ReturnValue"
  - - "PG::Connection"
    - "PG::BasicTypeRegistry::Checker"
    - "Method[build_coder_maps].ReturnValue"
  - - "PG::Connection"
    - "PG!"
    - "Method[connect].ReturnValue"
  - - "PG::BasicTypeRegistry"
    - "PG::BasicTypeRegistry"
    - "Method[register_coder].ReturnValue"
  - - "PG::BasicTypeRegistry"
    - "PG::BasicTypeRegistry"
    - "Method[register_type].ReturnValue"
  - - "PG::BasicTypeRegistry"
    - "PG::BasicTypeRegistry"
    - "Method[alias_type].ReturnValue"
  - - "PG::BasicTypeRegistry"
    - "PG::BasicTypeRegistry"
    - "Method[register_default_types].ReturnValue"
  - - "PG::BasicTypeRegistry"
    - "PG::BasicTypeRegistry::Checker"
    - "Method[build_coder_maps].Parameter[1]"
  - - "PG::BasicTypeRegistry"
    - "PG::BasicTypeRegistry::Checker"
    - "Method[build_coder_maps].Parameter[registry:]"
  - - "PG::BasicTypeRegistry"
    - "PG::BasicTypeMapForQueries!"
    - "Method[new].Parameter[1]"
  - - "PG::BasicTypeRegistry"
    - "PG::BasicTypeMapForQueries!"
    - "Method[new].Parameter[registry:]"
  - - "PG::BasicTypeRegistry"
    - "PG::BasicTypeMapBasedOnResult!"
    - "Method[new].Parameter[1]"
  - - "PG::BasicTypeRegistry"
    - "PG::BasicTypeMapBasedOnResult!"
    - "Method[new].Parameter[registry:]"
  - - "PG::BasicTypeRegistry"
    - "PG::BasicTypeMapForResults!"
    - "Method[new].Parameter[1]"
  - - "PG::BasicTypeRegistry"
    - "PG::BasicTypeMapForResults!"
    - "Method[new].Parameter[registry:]"
  - - "PG::BasicTypeRegistry"
    - "PG::BasicTypeRegistry::CoderMapsBundle!"
    - "Method[new].Parameter[1]"
  - - "PG::BasicTypeRegistry"
    - "PG::BasicTypeRegistry::CoderMapsBundle!"
    - "Method[new].Parameter[registry:]"
  - - "Helpers::TcpGateSwitcher"
    - "PG::TestingHelpers"
    - "Method[run_with_gate].Argument[block].Parameter[1]"
  - - "Helpers::TcpGateSwitcher"
    - "PG::TestingHelpers"
    - "Method[gate_setup].ReturnValue"
  - - "PG::TestingHelpers::ConnStillUsableMatcher"
    - "PG::TestingHelpers"
    - "Method[still_be_usable].ReturnValue"
- "addsTo":
    "extensible": "sinkModel"
    "pack": "codeql/ruby-all"
  "data":
  - - "PG::Connection"
    - "Method[copy_data].Parameter[0]"
    - "command-injection"
  - - "PG::Connection"
    - "Method[async_connect_or_reset].Parameter[0]"
    - "code-injection"
  - - "PG::TestingHelpers"
    - "Method[wait_for_polling_ok].Parameter[1]"
    - "code-injection"
  - - "PG::Coder"
    - "Method[marshal_load].Parameter[0]"
    - "unsafe-deserialization"
  - - "PG::TestingHelpers::Loggable"
    - "Method[log_and_run].Parameter[0]"
    - "path-injection"
- "addsTo":
    "extensible": "summaryModel"
    "pack": "codeql/ruby-all"
  "data":
  - - "PG::TestingHelpers::PostgresServer"
    - "Method[pg_bin_path]"
    - "Argument[0]"
    - "ReturnValue"
    - "taint"
  - - "PG::BasicTypeRegistry::Checker"
    - "Method[build_coder_maps]"
    - "Argument[0]"
    - "ReturnValue"
    - "value"
  - - "PG::TextDecoder::Date"
    - "Method[decode]"
    - "Argument[0]"
    - "ReturnValue"
    - "value"
  - - "PG::TextDecoder::JSON"
    - "Method[decode]"
    - "Argument[0]"
    - "ReturnValue"
    - "taint"
  - - "PG::TextEncoder::Inet"
    - "Method[encode]"
    - "Argument[0]"
    - "ReturnValue"
    - "value"
  - - "PG::TextEncoder::Date"
    - "Method[encode]"
    - "Argument[0]"
    - "ReturnValue"
    - "value"
  - - "PG::TextEncoder::JSON"
    - "Method[encode]"
    - "Argument[0]"
    - "ReturnValue"
    - "taint"
  - - "PG::TextEncoder::TimestampWithoutTimeZone"
    - "Method[encode]"
    - "Argument[0]"
    - "ReturnValue"
    - "value"
  - - "PG::TextEncoder::TimestampUtc"
    - "Method[encode]"
    - "Argument[0]"
    - "ReturnValue"
    - "value"
  - - "PG::TextEncoder::TimestampWithTimeZone"
    - "Method[encode]"
    - "Argument[0]"
    - "ReturnValue"
    - "value"
  - - "Helpers::TcpGateScheduler::Connection"
    - "Method[write]"
    - "Argument[0]"
    - "ReturnValue"
    - "value"
  - - "Helpers::TcpGateScheduler::Connection"
    - "Method[write]"
    - "Argument[transfer_until:]"
    - "ReturnValue"
    - "value"
  - - "Helpers::TcpGateScheduler::Connection"
    - "Method[other_side_of?]"
    - "Argument[1]"
    - "ReturnValue"
    - "taint"
  - - "Helpers::TcpGateScheduler::Connection"
    - "Method[other_side_of?]"
    - "Argument[0]"
    - "ReturnValue"
    - "taint"
  - - "Helpers::TcpGateScheduler::Connection"
    - "Method[read]"
    - "Argument[0]"
    - "ReturnValue"
    - "value"
  - - "Helpers::TcpGateScheduler::Connection"
    - "Method[read]"
    - "Argument[transfer_until:]"
    - "ReturnValue"
    - "value"
  - - "PG::Connection!"
    - "Method[quote_connstr]"
    - "Argument[0]"
    - "ReturnValue"
    - "taint"
  - - "PG::Connection!"
    - "Method[connect_hash_to_string]"
    - "Argument[0]"
    - "ReturnValue"
    - "taint"
  - - "PG::BasicTypeMapForResults::WarningTypeMap!"
    - "Method[new]"
    - "Argument[0]"
    - "ReturnValue"
    - "value"
  - - "Helpers::TcpGateScheduler::Connection!"
    - "Method[new]"
    - "Argument[3]"
    - "ReturnValue"
    - "value"
  - - "Helpers::TcpGateScheduler::Connection!"
    - "Method[new]"
    - "Argument[debug:]"
    - "ReturnValue"
    - "value"
  - - "WalShipper::Dispatcher!"
    - "Method[new]"
    - "Argument[0]"
    - "ReturnValue"
    - "taint"
  - - "PG::TestingHelpers::PostgresServer!"
    - "Method[new]"
    - "Argument[0]"
    - "ReturnValue"
    - "taint"
  - - "PG!"
    - "Method[make_shareable]"
    - "Argument[0]"
    - "ReturnValue"
    - "taint"
