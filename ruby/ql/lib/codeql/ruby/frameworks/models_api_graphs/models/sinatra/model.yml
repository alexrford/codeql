"extensions":
- "addsTo":
    "extensible": "typeModel"
    "pack": "codeql/ruby-all"
  "data":
  - - "Hash"
    - "Sinatra::ContentFor"
    - "Method[content_blocks].ReturnValue"
  - - "Module"
    - "Sinatra::Namespace::SharedMethods"
    - "Method[namespace].ReturnValue"
  - - "Module"
    - "Sinatra::Namespace!"
    - "Method[new].ReturnValue"
  - - "Class"
    - "Sinatra!"
    - "Method[new].ReturnValue"
  - - "Mustermann"
    - "Sinatra::Namespace::NamespacedMethods"
    - "Method[prefixed_path].ReturnValue"
  - - "Mustermann"
    - "Sinatra::Namespace::NamespacedMethods"
    - "Method[compile].ReturnValue.Element"
  - - "Sinatra::Base"
    - "Sinatra::Base"
    - "Method[process_route].Argument[block].Parameter[0]"
  - - "Sinatra::Base"
    - "Sinatra::Base!"
    - "Method[new].Argument[block].Parameter[0]"
  - - "Sinatra::Base"
    - "Sinatra::Base!"
    - "Method[prototype].ReturnValue"
  - - "Rack::Protection::EncryptedCookie::Marshal"
    - "Rack::Protection::EncryptedCookie"
    - "Method[secure?].ReturnValue"
  - - "Sinatra::Base!"
    - "Sinatra::Base!"
    - "Method[set].ReturnValue"
  - - "Sinatra::Base!"
    - "Sinatra::Base!"
    - "Method[configure].Argument[block].Parameter[0]"
  - - "Sinatra::Base!"
    - "Sinatra::Base!"
    - "Method[settings].ReturnValue"
  - - "Sinatra::Base!"
    - "Sinatra::Base!"
    - "Method[configure].ReturnValue"
  - - "Sinatra::Base!"
    - "Sinatra::Base!"
    - "Method[public=].ReturnValue"
  - - "Sinatra::Base!"
    - "Sinatra::Base!"
    - "Method[setup_traps].ReturnValue"
  - - "Sinatra::IndifferentHash"
    - "Sinatra::IndifferentHash"
    - "Method[merge!].ReturnValue"
  - - "Sinatra::IndifferentHash"
    - "Sinatra::IndifferentHash"
    - "Method[select].ReturnValue"
  - - "Sinatra::IndifferentHash"
    - "Sinatra::IndifferentHash"
    - "Method[compact].ReturnValue"
  - - "Sinatra::IndifferentHash"
    - "Sinatra::IndifferentHash"
    - "Method[merge].ReturnValue"
  - - "Sinatra::IndifferentHash"
    - "Sinatra::IndifferentHash"
    - "Method[reject].ReturnValue"
  - - "Sinatra::IndifferentHash"
    - "Sinatra::ConfigFile"
    - "Method[config_for_env].ReturnValue"
  - - "Sinatra::IndifferentHash"
    - "Sinatra::IndifferentHash!"
    - "Method[[]].ReturnValue"
  - - "Sinatra::Request::AcceptEntry"
    - "Sinatra::Request"
    - "Method[preferred_type].ReturnValue"
  - - "Sinatra::Request::AcceptEntry"
    - "Sinatra::Request"
    - "Method[accept].ReturnValue.Element"
  - - "Sinatra::Cookies::Jar"
    - "Sinatra::Cookies::Jar"
    - "Method[delete_if].ReturnValue"
  - - "Sinatra::Cookies::Jar"
    - "Sinatra::Cookies::Jar"
    - "Method[keep_if].ReturnValue"
  - - "Sinatra::Cookies::Jar"
    - "Sinatra::Cookies::Jar"
    - "Method[rehash].ReturnValue"
  - - "Sinatra::Cookies::Jar"
    - "Sinatra::Cookies"
    - "Method[cookies].ReturnValue"
  - - "Sinatra::Helpers::Stream"
    - "Sinatra::Helpers::Stream"
    - "Method[<<].ReturnValue"
  - - "Sinatra::Helpers::Stream"
    - "Sinatra::Helpers"
    - "Method[body].ReturnValue"
  - - "Sinatra::Helpers::Stream"
    - "Sinatra::Helpers"
    - "Method[stream].ReturnValue"
  - - "Sinatra::Extension::DontCall"
    - "Sinatra::Extension"
    - "Method[method_missing].ReturnValue"
  - - "Sinatra::Extension"
    - "Sinatra::Extension"
    - "Method[settings].ReturnValue"
  - - "Sinatra::RespondWith::Format"
    - "Sinatra::RespondWith::Format"
    - "Method[finish].Argument[block].Parameter[0]"
  - - "Sinatra::RespondWith::Format"
    - "Sinatra::RespondWith::Helpers"
    - "Method[respond_with].Argument[block].Parameter[0]"
  - - "Sinatra::RespondWith::Format"
    - "Sinatra::RespondWith::Helpers"
    - "Method[respond_to].Argument[block].Parameter[0]"
  - - "Sinatra::Namespace"
    - "Sinatra::Namespace::SharedMethods"
    - "Method[namespace].ReturnValue"
  - - "Sinatra::Wrapper"
    - "Sinatra::Base!"
    - "Method[new].ReturnValue"
  - - "Sinatra::Wrapper"
    - "Sinatra::Base!"
    - "Method[prototype].ReturnValue"
  - - "Sinatra::Streaming::Stream"
    - "Sinatra::Streaming::Stream"
    - "Method[each].ReturnValue"
  - - "Sinatra::Streaming::Stream"
    - "Sinatra::Streaming::Stream"
    - "Method[map!].ReturnValue"
  - - "Rack::Protection::EncryptedCookie::Base64::Marshal"
    - "Rack::Protection::EncryptedCookie"
    - "Method[secure?].ReturnValue"
- "addsTo":
    "extensible": "sourceModel"
    "pack": "codeql/ruby-all"
  "data":
  - - "Sinatra::Request"
    - "Method[params].ReturnValue"
    - "remote"
  - - "Sinatra::Runner"
    - "Method[get_https_url].ReturnValue"
    - "remote"
  - - "Sinatra::Runner"
    - "Method[get_url].ReturnValue"
    - "remote"
- "addsTo":
    "extensible": "sinkModel"
    "pack": "codeql/ruby-all"
  "data":
  - - "Sinatra::Templates"
    - "Method[render].Parameter[0]"
    - "code-injection"
  - - "Sinatra::Namespace::NamespacedMethods"
    - "Method[method_missing].Parameter[0]"
    - "code-injection"
  - - "Sinatra::Namespace::NamespacedMethods"
    - "Method[invoke_hook].Parameter[0]"
    - "code-injection"
  - - "Sinatra::Namespace::NamespacedMethods"
    - "Method[prefixed].Parameter[0]"
    - "code-injection"
  - - "Rack::Protection::EncryptedCookie::Marshal"
    - "Method[decode].Parameter[0]"
    - "unsafe-deserialization"
- "addsTo":
    "extensible": "summaryModel"
    "pack": "codeql/ruby-all"
  "data":
  - - "OkJson"
    - "Method[encode]"
    - "Argument[0]"
    - "ReturnValue"
    - "taint"
  - - "OkJson"
    - "Method[unquote]"
    - "Argument[0]"
    - "ReturnValue"
    - "taint"
  - - "OkJson"
    - "Method[eat]"
    - "Argument[1]"
    - "ReturnValue"
    - "taint"
  - - "OkJson"
    - "Method[tok]"
    - "Argument[0]"
    - "ReturnValue"
    - "taint"
  - - "OkJson"
    - "Method[nulltok]"
    - "Argument[0]"
    - "ReturnValue"
    - "taint"
  - - "OkJson"
    - "Method[truetok]"
    - "Argument[0]"
    - "ReturnValue"
    - "taint"
  - - "OkJson"
    - "Method[falsetok]"
    - "Argument[0]"
    - "ReturnValue"
    - "taint"
  - - "OkJson"
    - "Method[abbrev]"
    - "Argument[0]"
    - "ReturnValue"
    - "taint"
  - - "OkJson"
    - "Method[subst]"
    - "Argument[0]"
    - "ReturnValue"
    - "taint"
  - - "OkJson"
    - "Method[subst]"
    - "Argument[1]"
    - "ReturnValue"
    - "taint"
  - - "OkJson"
    - "Method[surrogate?]"
    - "Argument[0]"
    - "ReturnValue"
    - "taint"
  - - "OkJson"
    - "Method[valenc]"
    - "Argument[0]"
    - "ReturnValue"
    - "taint"
  - - "OkJson"
    - "Method[arrenc]"
    - "Argument[0]"
    - "ReturnValue"
    - "taint"
  - - "OkJson"
    - "Method[numenc]"
    - "Argument[0]"
    - "ReturnValue"
    - "taint"
  - - "Sinatra::JSON"
    - "Method[resolve_content_type]"
    - "Argument[0]"
    - "ReturnValue"
    - "taint"
  - - "Sinatra::JSON"
    - "Method[resolve_encoder]"
    - "Argument[0]"
    - "ReturnValue"
    - "taint"
  - - "Sinatra::Templates"
    - "Method[compile_template]"
    - "Argument[1]"
    - "ReturnValue"
    - "value"
  - - "Sinatra::Namespace::NamespacedMethods"
    - "Method[prefixed_path]"
    - "Argument[0]"
    - "ReturnValue"
    - "value"
  - - "Sinatra::Namespace::NamespacedMethods"
    - "Method[prefixed_path]"
    - "Argument[1]"
    - "ReturnValue"
    - "value"
  - - "Sinatra::Base!"
    - "Method[mime_type]"
    - "Argument[0]"
    - "ReturnValue"
    - "value"
  - - "Sinatra::Base!"
    - "Method[mime_type]"
    - "Argument[1]"
    - "ReturnValue"
    - "value"
  - - "Sinatra::Base!"
    - "Method[force_encoding]"
    - "Argument[0]"
    - "ReturnValue"
    - "value"
  - - "Sinatra::Base!"
    - "Method[on_start]"
    - "Argument[0]"
    - "ReturnValue"
    - "value"
  - - "Sinatra::Base!"
    - "Method[on_start]"
    - "Argument[block]"
    - "ReturnValue"
    - "value"
  - - "Sinatra::Base!"
    - "Method[on_stop]"
    - "Argument[0]"
    - "ReturnValue"
    - "value"
  - - "Sinatra::Base!"
    - "Method[on_stop]"
    - "Argument[block]"
    - "ReturnValue"
    - "value"
  - - "Sinatra::Base!"
    - "Method[public_dir=]"
    - "Argument[0]"
    - "ReturnValue"
    - "value"
  - - "Sinatra::IndifferentHash"
    - "Method[convert_key]"
    - "Argument[0]"
    - "ReturnValue"
    - "value"
  - - "Sinatra::IndifferentHash"
    - "Method[replace]"
    - "Argument[0]"
    - "ReturnValue"
    - "taint"
  - - "Sinatra::IndifferentHash"
    - "Method[convert_value]"
    - "Argument[0]"
    - "ReturnValue"
    - "value"
  - - "Sinatra::ConfigFile"
    - "Method[config_for_env]"
    - "Argument[0]"
    - "ReturnValue"
    - "taint"
  - - "Sinatra::ConfigFile"
    - "Method[from_environment_key]"
    - "Argument[0]"
    - "ReturnValue"
    - "taint"
  - - "Sinatra::Helpers::Stream"
    - "Method[callback]"
    - "Argument[0]"
    - "ReturnValue"
    - "taint"
  - - "Sinatra::Helpers::Stream"
    - "Method[callback]"
    - "Argument[block]"
    - "ReturnValue"
    - "taint"
  - - "Sinatra::Helpers"
    - "Method[etag_matches?]"
    - "Argument[1]"
    - "ReturnValue"
    - "taint"
  - - "Sinatra::Helpers"
    - "Method[mime_type]"
    - "Argument[0]"
    - "ReturnValue"
    - "value"
  - - "Sinatra::Helpers"
    - "Method[body]"
    - "Argument[0]"
    - "ReturnValue"
    - "value"
  - - "Sinatra::Helpers"
    - "Method[body]"
    - "Argument[1]"
    - "ReturnValue"
    - "value"
  - - "Sinatra::Helpers"
    - "Method[body]"
    - "Argument[block]"
    - "ReturnValue"
    - "value"
  - - "Sinatra::Helpers"
    - "Method[uri]"
    - "Argument[0]"
    - "ReturnValue"
    - "value"
  - - "Sinatra::Helpers"
    - "Method[content_type]"
    - "Argument[0]"
    - "ReturnValue"
    - "taint"
  - - "Sinatra::Helpers"
    - "Method[content_type]"
    - "Argument[1]"
    - "ReturnValue"
    - "taint"
  - - "Sinatra::ShowExceptions"
    - "Method[bad_request?]"
    - "Argument[0]"
    - "ReturnValue"
    - "taint"
  - - "Sinatra::Response"
    - "Method[body=]"
    - "Argument[0]"
    - "ReturnValue"
    - "value"
  - - "Sinatra::Capture"
    - "Method[capture]"
    - "Argument[1]"
    - "ReturnValue"
    - "taint"
  - - "Sinatra::Capture"
    - "Method[capture]"
    - "Argument[block]"
    - "ReturnValue"
    - "taint"
  - - "Sinatra::Reloader"
    - "Method[after_reload]"
    - "Argument[0]"
    - "ReturnValue"
    - "taint"
  - - "Sinatra::Reloader"
    - "Method[after_reload]"
    - "Argument[block]"
    - "ReturnValue"
    - "taint"
  - - "Sinatra::TestHelpers"
    - "Method[app=]"
    - "Argument[0]"
    - "ReturnValue"
    - "value"
  - - "Rack::Protection::AuthenticityToken"
    - "Method[decode_token]"
    - "Argument[0]"
    - "ReturnValue"
    - "taint"
  - - "Rack::Protection::AuthenticityToken"
    - "Method[unmask_token]"
    - "Argument[0]"
    - "ReturnValue"
    - "taint"
  - - "Rack::Protection::AuthenticityToken"
    - "Method[xor_byte_strings]"
    - "Argument[1]"
    - "ReturnValue"
    - "value"
  - - "Rack::Protection::AuthenticityToken"
    - "Method[set_token]"
    - "Argument[0]"
    - "ReturnValue"
    - "taint"
  - - "Rack::Protection::AuthenticityToken"
    - "Method[real_token]"
    - "Argument[0]"
    - "ReturnValue"
    - "taint"
  - - "Rack::Protection::Base"
    - "Method[session]"
    - "Argument[0]"
    - "ReturnValue"
    - "taint"
  - - "Rack::Protection::Base"
    - "Method[origin]"
    - "Argument[0]"
    - "ReturnValue"
    - "taint"
  - - "Rack::Protection::EncryptedCookie"
    - "Method[persistent_session_id!]"
    - "Argument[0]"
    - "ReturnValue"
    - "value"
  - - "Rack::Protection::EncryptedCookie"
    - "Method[secure?]"
    - "Argument[0]"
    - "ReturnValue"
    - "taint"
  - - "Rack::Protection::FormToken"
    - "Method[accepts?]"
    - "Argument[0]"
    - "ReturnValue"
    - "taint"
  - - "Rack::Protection::EscapedParams"
    - "Method[escape]"
    - "Argument[0]"
    - "ReturnValue"
    - "value"
  - - "Rack::Protection::EscapedParams"
    - "Method[handle]"
    - "Argument[0]"
    - "ReturnValue"
    - "value"
  - - "Rack::Protection::EscapedParams"
    - "Method[escape_hash]"
    - "Argument[0]"
    - "ReturnValue"
    - "value"
  - - "Rack::Protection::EscapedParams"
    - "Method[escape_string]"
    - "Argument[0]"
    - "ReturnValue"
    - "value"
  - - "Rack::Protection::SessionHijacking"
    - "Method[encode]"
    - "Argument[0]"
    - "ReturnValue"
    - "taint"
  - - "Rack::Protection::EncryptedCookie::Base64"
    - "Method[encode]"
    - "Argument[0]"
    - "ReturnValue"
    - "taint"
  - - "Rack::Protection::EncryptedCookie::Identity"
    - "Method[encode]"
    - "Argument[0]"
    - "ReturnValue"
    - "value"
  - - "Rack::Protection::EncryptedCookie::Identity"
    - "Method[decode]"
    - "Argument[0]"
    - "ReturnValue"
    - "value"
  - - "Sinatra::Reloader::Watcher::List"
    - "Method[watch]"
    - "Argument[1]"
    - "ReturnValue"
    - "taint"
  - - "Rack::Protection::EncryptedCookie::Base64::JSON"
    - "Method[encode]"
    - "Argument[0]"
    - "ReturnValue"
    - "taint"
  - - "Sinatra::ShowExceptions!"
    - "Method[new]"
    - "Argument[0]"
    - "ReturnValue"
    - "value"
  - - "Sinatra::Extension::DontCall!"
    - "Method[new]"
    - "Argument[0]"
    - "ReturnValue"
    - "value"
  - - "Rack::Protection::Encryptor!"
    - "Method[base64_encode]"
    - "Argument[0]"
    - "ReturnValue"
    - "taint"
  - - "Sinatra::RespondWith!"
    - "Method[jrubyify]"
    - "Argument[0]"
    - "ReturnValue"
    - "value"
  - - "TestEnvInspector!"
    - "Method[new]"
    - "Argument[0]"
    - "ReturnValue"
    - "value"
  - - "Sinatra::Wrapper!"
    - "Method[new]"
    - "Argument[1]"
    - "ReturnValue"
    - "value"
