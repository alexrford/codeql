"extensions":
- "addsTo":
    "extensible": "typeModel"
    "pack": "codeql/ruby-all"
  "data":
  - - "Hash"
    - "Rack::MockResponse"
    - "Method[parse_cookies_from_header].ReturnValue"
  - - "Hash"
    - "Rack::MockResponse"
    - "Method[identify_cookie_attributes].ReturnValue"
  - - "String"
    - "Rack::MockResponse"
    - "Method[body].ReturnValue"
  - - "String"
    - "Rack::Multipart::Parser"
    - "Method[normalize_filename].ReturnValue"
  - - "String"
    - "Rack::Multipart!"
    - "Method[parse_multipart].Argument[0].Element.Parameter[0]"
  - - "String"
    - "Rack::Multipart::Parser!"
    - "Method[parse].Argument[3].Parameter[0]"
  - - "String"
    - "Rack::Multipart::Parser!"
    - "Method[new].Argument[1].Parameter[0]"
  - - "String"
    - "Rack::Multipart::Parser::Collector!"
    - "Method[new].Argument[0].Parameter[0]"
  - - "StringIO"
    - "Rack::CommonLogger!"
    - "Method[new].Argument[0].Parameter[0].Element"
  - - "StringIO"
    - "Rack::ConditionalGet!"
    - "Method[new].Argument[0].Parameter[0].Element"
  - - "StringIO"
    - "Rack::ContentLength!"
    - "Method[new].Argument[0].Parameter[0].Element"
  - - "StringIO"
    - "Rack::ContentType!"
    - "Method[new].Argument[0].Parameter[0].Element"
  - - "StringIO"
    - "Rack::Deflater!"
    - "Method[new].Argument[0].Parameter[0].Element"
  - - "StringIO"
    - "Rack::Deflater!"
    - "Method[new].Argument[1].Element.Parameter[0].Element"
  - - "StringIO"
    - "Rack::ETag!"
    - "Method[new].Argument[0].Parameter[0].Element"
  - - "StringIO"
    - "Rack::Head!"
    - "Method[new].Argument[0].Parameter[0].Element"
  - - "StringIO"
    - "Rack::Lint!"
    - "Method[new].Argument[0].Parameter[0].Element"
  - - "StringIO"
    - "Rack::MethodOverride!"
    - "Method[new].Argument[0].Parameter[0].Element"
  - - "StringIO"
    - "Rack::MockRequest!"
    - "Method[env_for].ReturnValue.Element"
  - - "StringIO"
    - "Rack::MockRequest!"
    - "Method[new].Argument[0].Parameter[0].Element"
  - - "StringIO"
    - "Rack::NullLogger!"
    - "Method[new].Argument[0].Parameter[0].Element"
  - - "StringIO"
    - "Rack::Runtime!"
    - "Method[new].Argument[0].Parameter[0].Element"
  - - "StringIO"
    - "Rack::ShowExceptions!"
    - "Method[new].Argument[0].Parameter[0].Element"
  - - "StringIO"
    - "Rack::TempfileReaper!"
    - "Method[new].Argument[0].Parameter[0].Element"
  - - "StringIO"
    - "Rack::Sendfile!"
    - "Method[new].Argument[0].Parameter[0].Element"
  - - "StringIO"
    - "Rack::ShowStatus!"
    - "Method[new].Argument[0].Parameter[0].Element"
  - - "StringIO"
    - "Rack::Static!"
    - "Method[new].Argument[0].Parameter[0].Element"
  - - "StringIO"
    - "Rack::Lint::Wrapper!"
    - "Method[new].Argument[0].Parameter[0].Element"
  - - "ERB"
    - "Rack::ShowExceptions"
    - "Method[template].ReturnValue"
  - - "Rack::RewindableInput"
    - "Rack::RewindableInput::Middleware!"
    - "Method[new].Argument[0].Parameter[0].Element"
  - - "Rack::Request"
    - "Rack::Events"
    - "Method[make_request].ReturnValue"
  - - "Rack::Request"
    - "Rack::Auth::AbstractRequest"
    - "Method[request].ReturnValue"
  - - "Rack::Headers"
    - "Rack::Headers"
    - "Method[update].ReturnValue"
  - - "Rack::Headers"
    - "Rack::Headers"
    - "Method[select].ReturnValue"
  - - "Rack::Headers"
    - "Rack::Headers"
    - "Method[reject].ReturnValue"
  - - "Rack::Headers"
    - "Rack::Headers"
    - "Method[replace].ReturnValue"
  - - "Rack::Headers"
    - "Rack::Headers"
    - "Method[transform_keys].ReturnValue"
  - - "Rack::Headers"
    - "Rack::Headers"
    - "Method[transform_keys!].ReturnValue"
  - - "Rack::Headers"
    - "Rack::Headers!"
    - "Method[[]].ReturnValue"
  - - "Rack::QueryParser"
    - "Rack::QueryParser!"
    - "Method[make_default].ReturnValue"
  - - "Rack::Response"
    - "Rack::Response"
    - "Method[finish].Argument[block].Parameter[0]"
  - - "Rack::Response"
    - "Rack::Response!"
    - "Method[new].Argument[block].Parameter[0]"
  - - "Rack::Response"
    - "Rack::Response!"
    - "Method[[]].ReturnValue"
  - - "Rack::URLMap"
    - "Rack::Builder"
    - "Method[generate_map].ReturnValue"
  - - "Rack::Events::BufferedResponse"
    - "Rack::Events"
    - "Method[make_response].ReturnValue"
  - - "Rack::MockRequest::FatalWarner"
    - "Rack::CommonLogger!"
    - "Method[new].Argument[0].Parameter[0].Element"
  - - "Rack::MockRequest::FatalWarner"
    - "Rack::ConditionalGet!"
    - "Method[new].Argument[0].Parameter[0].Element"
  - - "Rack::MockRequest::FatalWarner"
    - "Rack::ContentLength!"
    - "Method[new].Argument[0].Parameter[0].Element"
  - - "Rack::MockRequest::FatalWarner"
    - "Rack::ContentType!"
    - "Method[new].Argument[0].Parameter[0].Element"
  - - "Rack::MockRequest::FatalWarner"
    - "Rack::Deflater!"
    - "Method[new].Argument[0].Parameter[0].Element"
  - - "Rack::MockRequest::FatalWarner"
    - "Rack::Deflater!"
    - "Method[new].Argument[1].Element.Parameter[0].Element"
  - - "Rack::MockRequest::FatalWarner"
    - "Rack::ETag!"
    - "Method[new].Argument[0].Parameter[0].Element"
  - - "Rack::MockRequest::FatalWarner"
    - "Rack::Head!"
    - "Method[new].Argument[0].Parameter[0].Element"
  - - "Rack::MockRequest::FatalWarner"
    - "Rack::Lint!"
    - "Method[new].Argument[0].Parameter[0].Element"
  - - "Rack::MockRequest::FatalWarner"
    - "Rack::MethodOverride!"
    - "Method[new].Argument[0].Parameter[0].Element"
  - - "Rack::MockRequest::FatalWarner"
    - "Rack::MockRequest!"
    - "Method[env_for].ReturnValue.Element"
  - - "Rack::MockRequest::FatalWarner"
    - "Rack::MockRequest!"
    - "Method[new].Argument[0].Parameter[0].Element"
  - - "Rack::MockRequest::FatalWarner"
    - "Rack::NullLogger!"
    - "Method[new].Argument[0].Parameter[0].Element"
  - - "Rack::MockRequest::FatalWarner"
    - "Rack::Runtime!"
    - "Method[new].Argument[0].Parameter[0].Element"
  - - "Rack::MockRequest::FatalWarner"
    - "Rack::ShowExceptions!"
    - "Method[new].Argument[0].Parameter[0].Element"
  - - "Rack::MockRequest::FatalWarner"
    - "Rack::TempfileReaper!"
    - "Method[new].Argument[0].Parameter[0].Element"
  - - "Rack::MockRequest::FatalWarner"
    - "Rack::Sendfile!"
    - "Method[new].Argument[0].Parameter[0].Element"
  - - "Rack::MockRequest::FatalWarner"
    - "Rack::ShowStatus!"
    - "Method[new].Argument[0].Parameter[0].Element"
  - - "Rack::MockRequest::FatalWarner"
    - "Rack::Static!"
    - "Method[new].Argument[0].Parameter[0].Element"
  - - "Rack::MockRequest::FatalWarner"
    - "Rack::Lint::Wrapper!"
    - "Method[new].Argument[0].Parameter[0].Element"
  - - "Rack::Multipart::ParamList"
    - "Rack::QueryParser"
    - "Method[normalize_params].ReturnValue"
  - - "Rack::Multipart::ParamList"
    - "Rack::QueryParser"
    - "Method[_normalize_params].ReturnValue"
  - - "Rack::Multipart::ParamList"
    - "Rack::Multipart::ParamList!"
    - "Method[make_params].ReturnValue"
  - - "Rack::Events::EventedBodyProxy"
    - "Rack::Events"
    - "Method[call].ReturnValue.Element"
  - - "Rack::Deflater::GzipStream"
    - "Rack::Deflater!"
    - "Method[new].Argument[1].Element.Parameter[3]"
  - - "Rack::Deflater::GzipStream"
    - "Rack::Deflater!"
    - "Method[new].Argument[1].Element.Parameter[1].Element"
  - - "Rack::Deflater::GzipStream"
    - "Rack::Deflater"
    - "Method[call].ReturnValue.Element"
  - - "Rack::Files::BaseIterator"
    - "Rack::Files"
    - "Method[get].ReturnValue.Element"
  - - "Rack::Files::BaseIterator"
    - "Rack::Files"
    - "Method[serving].ReturnValue.Element"
  - - "Rack::NullLogger"
    - "Rack::CommonLogger"
    - "Method[call].Argument[0].Element.Parameter[0].Element"
  - - "Rack::NullLogger"
    - "Rack::NullLogger!"
    - "Method[new].Argument[0].Parameter[0].Element"
  - - "Rack::NullLogger"
    - "Rack::Lint"
    - "Method[call].Argument[0].Element.Parameter[0].Element"
  - - "Rack::NullLogger"
    - "Rack::NullLogger"
    - "Method[call].Argument[0].Element.Parameter[0].Element"
  - - "Rack::NullLogger"
    - "Rack::Lint::Wrapper!"
    - "Method[new].Argument[1].Element.Parameter[0].Element"
  - - "Rack::BodyProxy"
    - "Rack::Files"
    - "Method[call].ReturnValue.Element"
  - - "Rack::BodyProxy"
    - "Rack::Cascade"
    - "Method[add].ReturnValue.Element.ReturnValue.Element"
  - - "Rack::BodyProxy"
    - "Rack::CommonLogger"
    - "Method[call].ReturnValue.Element"
  - - "Rack::BodyProxy"
    - "Rack::ConditionalGet"
    - "Method[call].ReturnValue.Element"
  - - "Rack::BodyProxy"
    - "Rack::Directory"
    - "Method[call].ReturnValue.Element"
  - - "Rack::BodyProxy"
    - "Rack::Directory"
    - "Method[get].ReturnValue.Element"
  - - "Rack::BodyProxy"
    - "Rack::Directory"
    - "Method[list_path].ReturnValue.Element"
  - - "Rack::BodyProxy"
    - "Rack::Sendfile"
    - "Method[call].ReturnValue.Element"
  - - "Rack::BodyProxy"
    - "Rack::Deflater"
    - "Method[call].ReturnValue.Element"
  - - "Rack::BodyProxy"
    - "Rack::Head"
    - "Method[call].ReturnValue.Element"
  - - "Rack::BodyProxy"
    - "Rack::TempfileReaper"
    - "Method[call].ReturnValue.Element"
  - - "Rack::BodyProxy"
    - "Rack::ShowStatus"
    - "Method[call].ReturnValue.Element"
  - - "Rack::BodyProxy"
    - "Rack::Static"
    - "Method[call].ReturnValue.Element"
  - - "Rack::Directory::DirectoryBody"
    - "Rack::Directory"
    - "Method[get].ReturnValue.Element"
  - - "Rack::Directory::DirectoryBody"
    - "Rack::Directory"
    - "Method[list_directory].ReturnValue.Element"
  - - "Rack::Directory::DirectoryBody"
    - "Rack::Directory"
    - "Method[list_path].ReturnValue.Element"
  - - "Rack::Files::Iterator"
    - "Rack::Files"
    - "Method[get].ReturnValue.Element"
  - - "Rack::Files::Iterator"
    - "Rack::Files"
    - "Method[serving].ReturnValue.Element"
  - - "Rack::Lint::Wrapper::StreamWrapper"
    - "Rack::Lint::Wrapper"
    - "Method[check_hijack_response].Argument[0].Element.Parameter[0]"
- "addsTo":
    "extensible": "sourceModel"
    "pack": "codeql/ruby-all"
  "data":
  - - "Rack::Request"
    - "Method[params].ReturnValue"
    - "remote"
- "addsTo":
    "extensible": "sinkModel"
    "pack": "codeql/ruby-all"
  "data":
  - - "Rack::Files"
    - "Method[filesize].Parameter[0]"
    - "path-injection"
  - - "Rack::Reloader"
    - "Method[safe_load].Parameter[0]"
    - "path-injection"
  - - "Rack::Builder!"
    - "Method[load_file].Parameter[0]"
    - "path-injection"
  - - "Rack::Builder!"
    - "Method[parse_file].Parameter[0]"
    - "path-injection"
  - - "Rack::Builder!"
    - "Method[new_from_string].Parameter[0]"
    - "code-injection"
- "addsTo":
    "extensible": "summaryModel"
    "pack": "codeql/ruby-all"
  "data":
  - - "Rack::MockResponse"
    - "Method[=~]"
    - "Argument[0]"
    - "ReturnValue"
    - "taint"
  - - "Rack::Headers"
    - "Method[downcase_key]"
    - "Argument[0]"
    - "ReturnValue"
    - "value"
  - - "Rack::QueryParser"
    - "Method[normalize_params]"
    - "Argument[0]"
    - "ReturnValue"
    - "value"
  - - "Rack::QueryParser"
    - "Method[_normalize_params]"
    - "Argument[0]"
    - "ReturnValue"
    - "value"
  - - "Rack::QueryParser"
    - "Method[_normalize_params]"
    - "Argument[2]"
    - "ReturnValue"
    - "value"
  - - "Rack::QueryParser!"
    - "Method[new]"
    - "Argument[1]"
    - "ReturnValue"
    - "value"
  - - "Rack::Events"
    - "Method[make_response]"
    - "Argument[1]"
    - "ReturnValue"
    - "taint"
  - - "Rack::MethodOverride"
    - "Method[method_override]"
    - "Argument[0]"
    - "ReturnValue"
    - "taint"
  - - "Rack::Response"
    - "Method[set_header]"
    - "Argument[1]"
    - "ReturnValue"
    - "value"
  - - "Rack::Response"
    - "Method[redirect]"
    - "Argument[0]"
    - "ReturnValue"
    - "value"
  - - "Rack::Builder"
    - "Method[map]"
    - "Argument[1]"
    - "ReturnValue"
    - "value"
  - - "Rack::Builder"
    - "Method[map]"
    - "Argument[block]"
    - "ReturnValue"
    - "value"
  - - "Rack::Builder"
    - "Method[run]"
    - "Argument[0]"
    - "ReturnValue"
    - "value"
  - - "Rack::Builder"
    - "Method[run]"
    - "Argument[1]"
    - "ReturnValue"
    - "value"
  - - "Rack::Builder"
    - "Method[run]"
    - "Argument[block]"
    - "ReturnValue"
    - "value"
  - - "Rack::Builder"
    - "Method[warmup]"
    - "Argument[0]"
    - "ReturnValue"
    - "value"
  - - "Rack::Builder"
    - "Method[warmup]"
    - "Argument[1]"
    - "ReturnValue"
    - "value"
  - - "Rack::Builder"
    - "Method[warmup]"
    - "Argument[block]"
    - "ReturnValue"
    - "value"
  - - "Rack::Request::Env"
    - "Method[set_header]"
    - "Argument[1]"
    - "ReturnValue"
    - "value"
  - - "Rack::Request::Env"
    - "Method[add_header]"
    - "Argument[1]"
    - "ReturnValue"
    - "value"
  - - "Rack::Request::Helpers"
    - "Method[[]=]"
    - "Argument[1]"
    - "ReturnValue"
    - "value"
  - - "Rack::Request::Helpers"
    - "Method[update_param]"
    - "Argument[1]"
    - "ReturnValue"
    - "value"
  - - "Rack::Request::Helpers"
    - "Method[script_name=]"
    - "Argument[0]"
    - "ReturnValue"
    - "taint"
  - - "Rack::Request::Helpers"
    - "Method[path_info=]"
    - "Argument[0]"
    - "ReturnValue"
    - "taint"
  - - "Rack::Request::Helpers"
    - "Method[host_with_port]"
    - "Argument[0]"
    - "ReturnValue"
    - "value"
  - - "Rack::Request::Helpers"
    - "Method[wrap_ipv6]"
    - "Argument[0]"
    - "ReturnValue"
    - "value"
  - - "Rack::Request::Helpers"
    - "Method[split_header]"
    - "Argument[0]"
    - "ReturnValue"
    - "taint"
  - - "Rack::Request::Helpers"
    - "Method[allowed_scheme]"
    - "Argument[0]"
    - "ReturnValue"
    - "value"
  - - "Rack::Multipart::ParamList"
    - "Method[<<]"
    - "Argument[0]"
    - "ReturnValue"
    - "taint"
  - - "Rack::Multipart::ParamList!"
    - "Method[normalize_params]"
    - "Argument[0]"
    - "ReturnValue"
    - "taint"
  - - "Rack::Multipart::Parser"
    - "Method[dequote]"
    - "Argument[0]"
    - "ReturnValue"
    - "value"
  - - "Rack::Multipart::Parser"
    - "Method[normalize_filename]"
    - "Argument[0]"
    - "ReturnValue"
    - "taint"
  - - "Rack::Multipart::Parser"
    - "Method[tag_multipart_encoding]"
    - "Argument[3]"
    - "ReturnValue"
    - "taint"
  - - "Rack::Cascade"
    - "Method[add]"
    - "Argument[0]"
    - "ReturnValue"
    - "taint"
  - - "Rack::CommonLogger"
    - "Method[log]"
    - "Argument[0]"
    - "ReturnValue"
    - "taint"
  - - "Rack::CommonLogger"
    - "Method[log]"
    - "Argument[1]"
    - "ReturnValue"
    - "taint"
  - - "Rack::CommonLogger"
    - "Method[log]"
    - "Argument[2]"
    - "ReturnValue"
    - "taint"
  - - "Rack::CommonLogger"
    - "Method[log]"
    - "Argument[3]"
    - "ReturnValue"
    - "taint"
  - - "Rack::CommonLogger"
    - "Method[extract_content_length]"
    - "Argument[0]"
    - "ReturnValue"
    - "taint"
  - - "Rack::ConditionalGet"
    - "Method[fresh?]"
    - "Argument[0]"
    - "ReturnValue"
    - "taint"
  - - "Rack::ConditionalGet"
    - "Method[fresh?]"
    - "Argument[1]"
    - "ReturnValue"
    - "taint"
  - - "Rack::ConditionalGet"
    - "Method[etag_matches?]"
    - "Argument[0]"
    - "ReturnValue"
    - "taint"
  - - "Rack::ConditionalGet"
    - "Method[etag_matches?]"
    - "Argument[1]"
    - "ReturnValue"
    - "taint"
  - - "Rack::ConditionalGet"
    - "Method[modified_since?]"
    - "Argument[0]"
    - "ReturnValue"
    - "taint"
  - - "Rack::Directory"
    - "Method[filesize_format]"
    - "Argument[0]"
    - "ReturnValue"
    - "taint"
  - - "Rack::ETag"
    - "Method[etag_status?]"
    - "Argument[0]"
    - "ReturnValue"
    - "taint"
  - - "Rack::Sendfile"
    - "Method[variation]"
    - "Argument[0]"
    - "ReturnValue"
    - "taint"
  - - "Rack::Sendfile"
    - "Method[map_accel_path]"
    - "Argument[1]"
    - "ReturnValue"
    - "value"
  - - "Rack::Mime"
    - "Method[match?]"
    - "Argument[0]"
    - "ReturnValue"
    - "taint"
  - - "Rack::Mime"
    - "Method[match?]"
    - "Argument[1]"
    - "ReturnValue"
    - "taint"
  - - "Rack::Mime"
    - "Method[mime_type]"
    - "Argument[1]"
    - "ReturnValue"
    - "value"
  - - "Rack::Utils"
    - "Method[best_q_match]"
    - "Argument[1]"
    - "ReturnValue"
    - "taint"
  - - "Rack::Utils"
    - "Method[select_best_encoding]"
    - "Argument[0]"
    - "ReturnValue"
    - "taint"
  - - "Rack::Utils"
    - "Method[set_cookie_header!]"
    - "Argument[0]"
    - "ReturnValue"
    - "taint"
  - - "Rack::Multipart::Generator"
    - "Method[content_for_tempfile]"
    - "Argument[2]"
    - "ReturnValue"
    - "taint"
  - - "Rack::Multipart::Generator"
    - "Method[content_for_other]"
    - "Argument[0]"
    - "ReturnValue"
    - "taint"
  - - "Rack::Multipart::Generator"
    - "Method[content_for_other]"
    - "Argument[1]"
    - "ReturnValue"
    - "taint"
  - - "Rack::Response::Raw"
    - "Method[set_header]"
    - "Argument[1]"
    - "ReturnValue"
    - "value"
  - - "Rack::Response::Helpers"
    - "Method[location=]"
    - "Argument[0]"
    - "ReturnValue"
    - "value"
  - - "Rack::Response::Helpers"
    - "Method[append]"
    - "Argument[0]"
    - "ReturnValue"
    - "value"
  - - "Rack::Response::Helpers"
    - "Method[add_header]"
    - "Argument[1]"
    - "ReturnValue"
    - "taint"
  - - "Rack::Response::Helpers"
    - "Method[etag=]"
    - "Argument[0]"
    - "ReturnValue"
    - "value"
  - - "Rack::Response::Helpers"
    - "Method[content_type=]"
    - "Argument[0]"
    - "ReturnValue"
    - "value"
  - - "Rack::Response::Helpers"
    - "Method[set_cookie_header=]"
    - "Argument[0]"
    - "ReturnValue"
    - "value"
  - - "Rack::Response::Helpers"
    - "Method[cache_control=]"
    - "Argument[0]"
    - "ReturnValue"
    - "value"
  - - "Rack::Multipart::Parser::Collector"
    - "Method[on_mime_body]"
    - "Argument[1]"
    - "ReturnValue"
    - "taint"
  - - "Rack::Auth::AbstractRequest!"
    - "Method[new]"
    - "Argument[0]"
    - "ReturnValue"
    - "value"
  - - "Rack::Config!"
    - "Method[new]"
    - "Argument[1]"
    - "ReturnValue"
    - "value"
  - - "Rack::Config!"
    - "Method[new]"
    - "Argument[block]"
    - "ReturnValue"
    - "value"
  - - "Rack::CommonLogger!"
    - "Method[new]"
    - "Argument[1]"
    - "ReturnValue"
    - "value"
  - - "Rack::ConditionalGet!"
    - "Method[new]"
    - "Argument[0]"
    - "ReturnValue"
    - "value"
  - - "Rack::ContentLength!"
    - "Method[new]"
    - "Argument[0]"
    - "ReturnValue"
    - "value"
  - - "Rack::ContentType!"
    - "Method[new]"
    - "Argument[1]"
    - "ReturnValue"
    - "value"
  - - "Rack::Deflater!"
    - "Method[new]"
    - "Argument[1]"
    - "ReturnValue"
    - "taint"
  - - "Rack::ETag!"
    - "Method[new]"
    - "Argument[1]"
    - "ReturnValue"
    - "value"
  - - "Rack::Head!"
    - "Method[new]"
    - "Argument[0]"
    - "ReturnValue"
    - "value"
  - - "Rack::Events!"
    - "Method[new]"
    - "Argument[1]"
    - "ReturnValue"
    - "value"
  - - "Rack::Lint!"
    - "Method[new]"
    - "Argument[0]"
    - "ReturnValue"
    - "value"
  - - "Rack::Events::EventedBodyProxy!"
    - "Method[new]"
    - "Argument[3]"
    - "ReturnValue"
    - "value"
  - - "Rack::Events::BufferedResponse!"
    - "Method[new]"
    - "Argument[2]"
    - "ReturnValue"
    - "value"
  - - "Rack::MethodOverride!"
    - "Method[new]"
    - "Argument[0]"
    - "ReturnValue"
    - "value"
  - - "Rack::Deflater::GzipStream!"
    - "Method[new]"
    - "Argument[2]"
    - "ReturnValue"
    - "value"
  - - "Rack::MockRequest!"
    - "Method[new]"
    - "Argument[0]"
    - "ReturnValue"
    - "value"
  - - "Rack::Files::BaseIterator!"
    - "Method[new]"
    - "Argument[2]"
    - "ReturnValue"
    - "value"
  - - "Rack::Multipart::UploadedFile!"
    - "Method[new]"
    - "Argument[1]"
    - "ReturnValue"
    - "value"
  - - "Rack::Multipart::UploadedFile!"
    - "Method[new]"
    - "Argument[4]"
    - "ReturnValue"
    - "value"
  - - "Rack::Multipart::UploadedFile!"
    - "Method[new]"
    - "Argument[content_type:]"
    - "ReturnValue"
    - "value"
  - - "Rack::NullLogger!"
    - "Method[new]"
    - "Argument[0]"
    - "ReturnValue"
    - "value"
  - - "Rack::RewindableInput::Middleware!"
    - "Method[new]"
    - "Argument[0]"
    - "ReturnValue"
    - "value"
  - - "Rack::Recursive!"
    - "Method[new]"
    - "Argument[0]"
    - "ReturnValue"
    - "value"
  - - "Rack::Runtime!"
    - "Method[new]"
    - "Argument[1]"
    - "ReturnValue"
    - "taint"
  - - "Rack::ShowExceptions!"
    - "Method[new]"
    - "Argument[0]"
    - "ReturnValue"
    - "value"
  - - "Rack::Lint::Wrapper::InputWrapper!"
    - "Method[new]"
    - "Argument[0]"
    - "ReturnValue"
    - "value"
  - - "Rack::TempfileReaper!"
    - "Method[new]"
    - "Argument[0]"
    - "ReturnValue"
    - "value"
  - - "Rack::Lint::Wrapper::ErrorWrapper!"
    - "Method[new]"
    - "Argument[0]"
    - "ReturnValue"
    - "value"
  - - "Rack::Response::Raw!"
    - "Method[new]"
    - "Argument[1]"
    - "ReturnValue"
    - "value"
  - - "Rack::MediaType!"
    - "Method[type]"
    - "Argument[0]"
    - "ReturnValue"
    - "taint"
  - - "Rack::MediaType!"
    - "Method[strip_doublequotes]"
    - "Argument[0]"
    - "ReturnValue"
    - "value"
